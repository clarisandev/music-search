{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/clarasanchez/Api/interview/react-practice/src/components/TableToDo.jsx\";\nimport React from 'react';\nimport { ToDo } from './ToDo';\nexport const TableToDo = props => {\n  const {\n    tasks\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"TableToDo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: tasks ? tasks.map((el, index) => {\n        return /*#__PURE__*/_jsxDEV(ToDo, {\n          el: el\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 28\n        }, this);\n      }) : ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n};\n_c = TableToDo;\n\nvar _c;\n\n$RefreshReg$(_c, \"TableToDo\");","map":{"version":3,"sources":["/home/clarasanchez/Api/interview/react-practice/src/components/TableToDo.jsx"],"names":["React","ToDo","TableToDo","props","tasks","map","el","index"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,QAArB;AAEA,OAAO,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAChC,QAAM;AAAEC,IAAAA;AAAF,MAAYD,KAAlB;AACA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,gBACEC,KAAD,GACGA,KAAK,CAACC,GAAN,CAAU,CAACC,EAAD,EAAKC,KAAL,KAAe;AACrB,4BAAO,QAAC,IAAD;AAAM,UAAA,EAAE,EAAID;AAAZ,WAAuBC,KAAvB;AAAA;AAAA;AAAA;AAAA,gBAAP;AACH,OAFD,CADH,GAIG;AALJ;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH,CAdM;KAAML,S","sourcesContent":["import React from 'react'\nimport { ToDo } from './ToDo'\n\nexport const TableToDo = (props) => {\n    const { tasks } = props\n    return(\n        <div>\n            <h1>TableToDo</h1>\n            <div>\n            {(tasks)? (\n                tasks.map((el, index) => {\n                    return <ToDo el = {el} key = {index} />\n                }\n            )):('')}\n            </div>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}